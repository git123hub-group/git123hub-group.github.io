function parseFmt1(e){return e.replace(/\$((?:\\[\s\S]|[^\\\$])*)\$/g,function(e,a){var r,s,t,c,l,i;return""===a?"$":(s=a.match(/(.*?)(?::|$)/)[1],t=variableList["var_"+s],c=a.slice(s.length+1),(r=c.match(/^((?:\\[\s\S]|[^\\\=])*)=((?:\\[\s\S]|[^\\\=])*)$/))?(l=r[1].replace(/\\([\s\S])/g,"$1"),i=r[2].replace(/\\([\s\S])/g,"$1"),t.split(l).join(i)):(r=c.match(/^(-?\d+)$/))?t.slice(r[1]):(r=c.match(/^(-?\d+),(-?\d+)$/))?t.slice(r[1],r[2]):t)})}function cmpF(e,a,r){switch(e=e.toLowerCase()){case"==":case"equ":return a===r;case"!=":case"neq":return a!==r;case"<":case"lss":return r>a;case"<=":case"leq":return r>=a;case">":case"gtr":return a>r;case">=":case"geq":return a>=r}}function HTMLEscape(e){return(""+e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;")}function KernelStep(e){var a,r,s,t,c,l;if(e=(e+"").replace(/[\s\t\xa0\u3000]*/,""),":"===e.charAt(0)||"#"===e.charAt(0)||""===e)return void++lineNum;switch(a=e.match(/[A-Za-z0-9\-\_$]+(:[A-Za-z0-9\-\_$]*)?/)[0],r=a.split(":"),r.length<2&&(r[1]=""),s=e.slice(a.length+1),r[0]){case"write":switch(r[1]){case"var":hout+=HTMLEscape(variableList["var_"+s]);break;case"format":hout+=HTMLEscape(parseFmt1(s));break;default:hout+=HTMLEscape(s)}++lineNum;break;case"writeln":switch(r[1]){case"format":hout+=HTMLEscape(parseFmt1(s))+"\n";break;default:hout+=HTMLEscape(s)+"\n"}++lineNum;break;case"clear":hout="",++lineNum;break;case"goto":switch(r[1]){case"abs":lineNum=+s;break;case"rel":lineNum+=+s;break;default:lineNum=variableList["tag_"+s]}break;case"loop":switch(t=s.match(/(\S*)\s*([\s\S]*)/),c=variableList["tag_"+t[2]],r[1]){case"inc":variableList["var_"+t[1]]++;break;case"dec":default:variableList["var_"+t[1]]--}variableList["var_"+t[1]]?lineNum=c:++lineNum,variableList["var_"+t[1]]=""+variableList["var_"+t[1]];break;case"call":switch(r[1]){case"abs":calls[callsp++]=++lineNum,lineNum=+s;break;case"rel":calls[callsp++]=++lineNum,lineNum+=+s;break;case"ret":lineNum=calls[--callsp];break;default:calls[callsp++]=++lineNum,lineNum=variableList["tag_"+s]}break;case"break":++lineNum,breakpoint=!0,rframe=!1;break;case"nextf":++lineNum,breakpoint=!0,rframe=!0;break;case"execf":KernelStep(parseFmt1(s));break;case"set":switch(t=s.match(/([^=]*)\s*=([\s\S]*)/),r[1]){case"f":variableList["var_"+t[1]]=parseFmt1(t[2]);break;case"a":variableList["var_"+t[1]]=""+execNumExpr(t[2]);break;case"af":variableList["var_"+t[1]]=""+execNumExpr(parseFmt1(t[2]));break;case"p":variableList["var_"+t[1]]=""+prompt(t[2]);break;case"pf":variableList["var_"+t[1]]=""+prompt(parseFmt1(t[2]));break;default:variableList["var_"+t[1]]=t[2]}++lineNum;break;case"terminate":breakpoint=!0,rframe=!1;break;case"if":t=s.match(/(\S*)\s*(\S*)\s*(\S*)\s*([\s\S]*)/),l=cmpF(t[2],+parseFmt1(t[1]),+parseFmt1(t[3])),"not"===r[1]&&(l=!l),l?KernelStep(t[4]):++lineNum;break;case"if_str":t=s.match(/(\S*)\s*(\S*)\s*(\S*)\s*([\s\S]*)/),l=cmpF(t[2],parseFmt1(t[1]),parseFmt1(t[3])),"not"===r[1]&&(l=!l),l?KernelStep(t[4]):++lineNum}}